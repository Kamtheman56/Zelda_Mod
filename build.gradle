buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net/' }
        maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
        classpath group: 'org.spongepowered', name: 'mixingradle', version: '0.7-SNAPSHOT'

    }
}



plugins {
    id 'eclipse'
    id 'maven-publish'
    id 'net.minecraftforge.gradle' version '5.1.+'
    id 'org.parchmentmc.librarian.forgegradle' version '1.+'
    id 'org.spongepowered.mixin' version '0.7.+'

}
apply plugin: 'net.minecraftforge.gradle'
apply plugin: 'org.spongepowered.mixin'


version = '1.4.4'
group = 'com.kamth.zeldamod'
archivesBaseName = 'zeldamod'


java.toolchain.languageVersion = JavaLanguageVersion.of(17)
jarJar.enable()
println "Java: ${System.getProperty 'java.version'}, JVM: ${System.getProperty 'java.vm.version'} (${System.getProperty 'java.vendor'}), Arch: ${System.getProperty 'os.arch'}"
minecraft {

    mappings channel: 'parchment', version: '2023.06.26-1.20.1'


    runs {
        client {
            workingDirectory project.file('run')
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${projectDir}/build/createSrgToMcp/output.srg"
            property 'forge.logging.markers', 'REGISTRIES'


            property 'forge.logging.console.level', 'debug'


            property 'forge.enabledGameTestNamespaces', 'zeldamod'

            mods {
                zeldamod {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'zeldamod'

            mods {
                zeldamod {
                    source sourceSets.main
                }
            }
        }
        gameTestServer {
            workingDirectory project.file('run')

            property 'forge.logging.markers', 'REGISTRIES'

            property 'forge.logging.console.level', 'debug'

            property 'forge.enabledGameTestNamespaces', 'zeldamod'

            mods {
                zeldamod {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            args '--mod', 'zeldamod', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                zeldamod {
                    source sourceSets.main
                }
            }
        }
    }
}
mixin {
    add sourceSets.main, "zeldamod.refmap.json"

    config "zeldamod.mixins.json"
}


sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {

    maven { url = 'https://maven.minecraftforge.net/' }
    maven { url = 'https://repo.spongepowered.org/repository/maven-public/' }

    maven { url = "https://maven.florens.be/releases" }
    maven { url 'https://jitpack.io' }


}

dependencies {

    minecraft 'net.minecraftforge:forge:1.20.1-47.2.0'
    implementation fg.deobf("be.florens:expandability-forge:9.0.3")
    implementation "io.github.llamalad7:mixinextras-common:0.4.1"
    annotationProcessor 'org.spongepowered:mixin:0.8.5:processor'

    jarJar(group: 'be.florens', name: 'expandability-forge', version: '[9.0.1,9.0.6)') {

    }

}



jar {
    manifest {
        attributes([
                "Specification-Title"     : "zeldamod",
                "Specification-Vendor"    : "zeldamodsareus",
                "Specification-Version"   : "1.4.3", // We are version 1 of ourselves
                "Implementation-Title"    : project.name,
                "Implementation-Version"  : project.jar.archiveVersion,
                "Implementation-Vendor"   : "zeldamodsareus",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}


jar.finalizedBy('reobfJar')
jarJar {}.enable()


publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file://${project.projectDir}/mcmodsrepo"
        }
    }
}

tasks.withType(JavaCompile).configureEach {
    options.encoding = 'UTF-8' // Use the UTF-8 charset for Java compilation
}
